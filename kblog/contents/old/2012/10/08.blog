Subject: RedmineのREST機能を使ってみた
Content-type: html/text
Tags: JavaScript
Date: 2012/10/08
Public: yes

今の案件は Redmine を使ってる。</br>
実は Redmine を本格的に使うのは初めてだったりする。
<p/>
で、使ってみた感想、「チケットに埋もれる...w」
<p/>
使い方の問題のような気もするのだが、
基本的にチケットの重み付けがプロジェクト全体の物しか無く
ユーザ毎の重み付けが無いのでチケットの管理がしづらい。
<p/>
ぶっちゃけ、他人に振られたチケットとか興味無いし、
自分にとってのチケット意味付けが欲しいんだよね。
<p/>
ウォッチャーとかは有るけども「管理責任のあるチケット」も
「単なるオブサーバのチケット」もごちゃ混ぜなのであまり使えない。
<p/>
で、前置きが長くなったが Redmine には WebAPI で XML や JSON 
でチケットの情報を取得できる機能が付いていることに気がついた。<br/>
これを使って俺様的チケット管理が出来るんじゃ無いかと思い調べてみた。
<p/>

<h3/>API の仕様はこの辺</h3>
<ul>
<li>英語:<br/>
http://www.redmine.org/projects/redmine/wiki/Rest_api
</li>
<li>日本語(古い):<br/>
http://www.r-labs.org/projects/r-labs/wiki/Redmine_REST_API
</li>
</ul>
<p/>
ざっくり見るとまだ発展途上の様な気もする。
仕様書もかなり雑だ。
<p/>

<h3>実際に動かしてみる</h3>
<ul>
<li>http://www.r-labs.org/issues.json
</ul>
<xmp style="height:150px;">{
    "issues": [
        {
            "id": 1117,
            "project": {
                "id": 9,
                "name": "Wiki Extensions"
            },
            "tracker": {
                "id": 2,
                "name": "Feature"
            },
            "status": {
                "id": 1,
                "name": "新規（New）"
            },
            "priority": {
                "id": 4,
                "name": "通常（Normal）"
            },
            "author": {
                "id": 3,
                "name": "Haru Iida"
            },
            "assigned_to": {
                "id": 3,
                "name": "Haru Iida"
            },
            "fixed_version": {
                "id": 187,
                "name": "0.6.0"
            },
            "subject": "Compatible with redmine 2.1",
            "description": "",
            "start_date": "2012-10-07",
            "done_ratio": 0,
            "created_on": "2012-10-07T09:10:27Z",
            "updated_on": "2012-10-07T09:10:27Z"
        },
	…
    ],
    "total_count": 240,
    "offset": 0,
    "limit": 25
}
</xmp>
<p/>
サマリ的に必要な情報は一通り取得できるようだ。
デフォルトでは25件単位にページングする。


<h3>実際に使いそうな機能を確認</h3>
<ul>
<li>プロジェクト指定:<br/>
　　　　/issues.json?project_id={id}</li>
<li>ステータス制限:<br/>
　　　　/issues.json?status_id={open|closed}{id}<br/></li>
<li>更新日範囲指定:(*1)<br/>
　　　　/issues.json?updated_on=><2012-03-01|2012-03-07<br/></li>
<li>更新日ソート:(*1)<br/>
　　　　/issues.json?desc=updated_on<br/></li>
<li>ウォッチャー指定:<br/>
　　　　出来ない</li>
</ul>
<p/>
(*1)の機能は今の案件で使っている Redmine では使えなかった。
バージョンは はっきり分からないが 2011年3月頃設置したものらしい。
<p/>
さすがに最近更新されたチケットが取れないと使い物になんねーだろと
思ったが逃げ道を発見。
<p/>

カスタムクエリを検索条件に指定できるので、そこで更新日にソートをかければ良い。
<ul>
<li>カスタムクエリ指定:<br/>
　　　　/issues.json?query_id={id}</li>
</ul>
各条件は AND で複数書けるようなので最低限の事はできる様だ。
<p/>
<h3>その他</h3>

ちなみに更新機能もあるようだが今回はそこまで考えていないのでパス。
<p/>
こんな感じで Web-Mail 風にチケット管理したいなーと思って鋭意作成中。
今の案件には間に合いそうも無いけどw
<p><img border=1 src="/old/img/lovelog/mymine-00.png" /></p>


