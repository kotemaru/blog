Subject: GAE/Jを使ってみた。
Content-type: html/text
Tags: GAE/J
Date: 2009/11/29
Public: yes

公開サーバが欲しいって話を一昨日書いたら知人から
Google App Engine はどうよ、ってメールが来た。
<p/>
で、ちょっと調べてみた。<br/>
制限は有る物の普通の Servletサーバ±α って感じの物らしい。<br/>
ローカルで実行できる環境も用意されている。<br/>
<p/>
じゃあやって見るかと言うことでダウンロード。<br/>
http://code.google.com/intl/ja/appengine/downloads.html#Google_App_Engine_SDK_for_Java
<p/>
展開して取り合えずデモを実行してみる。<br/>
<pre>
> bin/dev_appserver.sh demos/guestbook/war
</pre>

http://localhost:8080/ にアクセスすると何かそれっぽい物が動いている。<br/>
サーバは jetty ベースのようなので普通にServletが動きそう。<br/>
<br/>
と言うわけで WSJSを乗せて見ることにした。<br/>
グーグルのチュートリアルを見ながら進めて行くとまず、設定ファイルが２つ必要らしい。<br/>
- web.xml : 普通の web.xml。<br/>
- appengine-web.xml : GAE 専用、内容はこれだけで良い。<br/>
<textarea readonly="true" wrap="off" style="width:100%;height:90px;font-size:12px;" >
<?xml version="1.0" encoding="utf-8"?>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
    <application></application>
    <version>1</version>
</appengine-web-app>
</textarea>
<br/>

取り合えずこれで実行... 怒られた。

<pre>
2009/11/28 11:34:39 com.google.apphosting.utils.jetty.JettyLogger warn
: Error starting handlers
java.lang.NoClassDefFoundError: java.lang.management.ManagementFactory is a restricted class. Please see the Google  App Engine developer's guide for more details.
        at com.google.appengine.tools.development.agent.runtime.Runtime.reject(Runtime.java:51)
        at kotemaru.util.CPUMonitor.<clinit>(CPUMonitor.java:11)
        at kotemaru.wsjs.WsjsServlet.localInit(WsjsServlet.java:36)
        at kotemaru.wsjs.WsjsServlet.init(WsjsServlet.java:22)
</pre>
ここで何をやっているかと言うと com.sun.management.OperatingSystemMXBean
のインスタンスを生成している。
com.sun.* は制限っぽい。まあ、しょうがないだろう。<br/>
CPUMonitorは無くても良いのでコメントアウトして再起動。
<p/>
起動はしたがアクセスしたら、怒られた。
<pre>
java.security.AccessControlException: access denied (java.io.FilePermission /home/inou/wsjs/webapps/wsjs/.link read)
        at java.security.AccessControlContext.checkPermission(AccessControlContext.java:323)
        at java.security.AccessController.checkPermission(AccessController.java:546)
        at java.lang.SecurityManager.checkPermission(SecurityManager.java:532)
</pre>
んー、この辺は予想通り。<br/>
webapps/ を WEB-INF/docroot/ に移動して再起動。
<p>
また、怒られた。
<pre>
java.lang.RuntimeException: Session support is not enabled in appengine-web.xml. To enable sessions, put <sessions-enabled>true</sessions-enabled> in that file. Without it, getSession() is allowed, but manipulation of sessionattributes is not.
</pre>
言われるがままに設定追加して再起動。
<p/>
今度はトップページが出た。思ったより順調<br/>
でもJSCPやEXJSは動かない。<br>
この辺を読むと静的ページはサーブレットを通さないとか書いてある。<br/>
http://code.google.com/intl/ja/appengine/docs/java/gettingstarted/staticfiles.html<br/>
全部のページを WEB-INF/docroot/ に置くようにしてみた。
<p/>
JSCPは動いたがEXJSにアクセスするとエラー。
<pre>
エラー:  'Could not initialize class com.sun.org.apache.bcel.internal.util.SyntheticRepository'
致命的エラー:  'スタイルシートをコンパイルできませんでした'
javax.xml.transform.TransformerConfigurationException: スタイルシートをコンパイルできませんでした
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTemplates(TransformerFactoryImpl.java:825)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTransformer(TransformerFactoryImpl.java:614)
</pre>
標準のXSLTが制限クラスを使っているらしい。<br/>
ちょっとググったら出て来た。<br/>
http://d.hatena.ne.jp/bluerabbit/20090925/1253884096<br/>
apache.org から落して来た XSLT の jar を lib に入れるだけ。<br/>
で、再起動。
<p/>
EXJSも動いた。<br/>
<p/>
WSJSとして最低限の機能は動作したがさすがにＤＢとファイルへの書き込みは逃げようが無い。
ストレージとして JDO と言う機能が提供されているのでこれに乗り換えるしか無さそう。
そんなに難しくはなさそうなのでサポートはしようと思う。
<p/>
しかし公開サーバと言う意味では GAE はちょっと窮屈な感じが否めない。<br/>
やっぱり何でもできる自前のサーバが欲しい..


