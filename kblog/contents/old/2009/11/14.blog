Subject: CASとLDAPのユーザ属性
Content-type: lovelog/text
Tags: メモ
Date: 2009/11/14
Public: yes

昨日に引続きCASとLDAPの連係を調査。
LDAPのロール情報をCASから得ようと奮闘した。
が、結論から言うとCASのバグで不完全。

何がバグっているかと言うと取得した属性の値が複数有る場合、最初の１個しか取れない。
電話番号や住所はそれで問題無いだろうがロールは普通複数有る。
で、全く同じ問題で１年も前に通報されてるんだが

パブロス：「バグってるよ、getUserAttributes()じゃなくてgetMultivaluedUserAttributes()使うべきじゃないの？」
スコット：「そこ良く分かんないんでー バグジラにでも上げといてー。」
(http://tp.its.yale.edu/pipermail/cas/2008-September/009669.html )

みたいな会話が有ってそのまま流されてるっぽい。直せよスコットー。
どうも、別プロジェクトの部品を使ってるらしく担当外らしい。
しかもこの機能自体が正規リリースされていないっぽいのでしょうがなさそげ。

と言うわけで、あと一歩なのに非常に残念だが一時撤退。
ただ、ここまで来るのに紆余曲折したのでまとめて置く。

- deployerConfigContext.xml の設定
-- LDAP用のリゾラバを追加して属性の項目を設定する。
-- UsernamePasswordCredentialsToPrincipalResolver の削除を忘れずに!! 
   残っていると優先されて下の設定が効かない。かなりはまった。
<pre style="border: 1px solid black; overflow:auto;">
		&lt;property name="credentialsToPrincipalResolvers">
			&lt;list>
&lt;!--
				&lt;bean
					class="org.jasig.cas.authentication.principal.UsernamePasswordCredentialsToPrincipalResolver" />
-->
				&lt;bean class="org.jasig.cas.authentication.principal.CredentialsToLDAPAttributePrincipalResolver">
					&lt;property name="credentialsToPrincipalResolver">
						&lt;bean class="org.jasig.cas.authentication.principal.UsernamePasswordCredentialsToPrincipalResolver" />
					&lt;/property>
					&lt;property name="filter" value="(cn=%u)" />
					&lt;property name="principalAttributeName" value="cn" />
					&lt;property name="searchBase" value="ou=People,dc=example,dc=com" />
					&lt;property name="contextSource" ref="contextSource" />

					&lt;property name="attributeRepository">
						&lt;ref bean="attributeRepositoryRole" />
					&lt;/property>
				&lt;/bean>
			&lt;/list>
		&lt;/property>
</pre>

-- LDAPの属性と応答属性名のマップを設定。
-- ※注意：これは CAS-3.3.4 以降の仕様、CAS-3.3.3 以前は仕様が異なるので要注意。
-- queryAttributeMapping は key=username は固定でユーザ名を意味する、valueはLDAPの検索キー名。
-- resultAttributeMappingは key=LDAP属性名、valueが応答に使う属性名。
-- resultAttributeMappingは 複数指定可能。
<pre style="border: 1px solid black; overflow:auto;">
&lt;bean id="attributeRepositoryRole"
	class="org.jasig.services.persondir.support.ldap.LdapPersonAttributeDao">
	&lt;property name="contextSource" ref="contextSource" />
	&lt;property name="requireAllQueryAttributes" value="true" />
	&lt;property name="baseDN" value="ou=Group,dc=example,dc=com" />
	&lt;property name="queryAttributeMapping">
		&lt;map>
			&lt;entry key="username" value="memberUid" /> 
		&lt;/map>
	&lt;/property>
	&lt;property name="resultAttributeMapping">
		&lt;map>
			&lt;entry key="cn" value="role"/>
		&lt;/map>
	&lt;/property>
&lt;/bean>
</pre>


- $TOMCAT_HOME/webapps/cas/WEB-INF/view/jsp/protocol/2.0/casServiceValidationSuccess.jsp の設定
-- これにはまった。
  ドキュメントにはサーバ設定の方法は書いて有るが取得の方法はどこにも書いていない。
  結局クライアントのソースを漁って /serviceValidate APIの戻り値の &lt;cas:attribute> として帰ってくる事が分かった。
  が、帰って来ない。しかも意味有りげに２行程空白が空いてる。

--こんな感じ。
<pre style="border: 1px solid black; overflow:auto;">
&lt;cas:serviceResponse xmlns:cas='http://www.yale.edu/tp/cas'>
        &lt;cas:authenticationSuccess>
                &lt;cas:user>admin&lt;/cas:user>


        &lt;/cas:authenticationSuccess>
&lt;/cas:serviceResponse>
</pre>

-- さんざん設定を見直したがさっぱり分からず、結局答えはここにあった。
http://www.ja-sig.org/issues/browse/CAS-655
「casServiceValidationSuccess.jspに以下の行を追加して下さい」
<pre style="border: 1px solid black; overflow:auto;">
&lt;cas:attributes>&lt;c:forEach var="attr"
items="${assertion.chainedAuthentications[fn:length(assertion.chainedAuthentications)-1].attributes}"
varStatus="loopStatus" begin="0"
end="${fn:length(assertion.chainedAuthentications[fn:length(assertion.chainedAuthentications)-1].attributes)-1}"
step="1">
&lt;cas:attribute>&lt;cas:name>${fn:escapeXml(attr.key)}&lt;/cas:name>
&lt;cas:value>${fn:escapeXml(attr.value)}&lt;/cas:value>
&lt;/cas:attribute>
&lt;/c:forEach>
&lt;/cas:attributes>
</pre>

はぁぁぁぁぁぁ？ プロトコル書き換えちゃっていいのかよー
   (なので、正式リリース機能では無いと判断、どこにも書いて無いけど)
で、これで出るようになったものの最初の１個だけ。
<pre style="border: 1px solid black; overflow:auto;">
&lt;cas:serviceResponse xmlns:cas='http://www.yale.edu/tp/cas'>
        &lt;cas:authenticationSuccess>
                &lt;cas:user>admin&lt;/cas:user>
&lt;cas:attributes>
&lt;cas:attribute>
&lt;cas:name>role&lt;/cas:name>
&lt;cas:value>admin&lt;/cas:value>
&lt;/cas:attribute>
&lt;/cas:attributes>
       &lt;/cas:authenticationSuccess>
&lt;/cas:serviceResponse>
</pre>


丸２日かけて結局使えない事が分かった orz


